openapi: 3.0.0
info:
  title: Findr
  description: This is an example API definition for a generic matching / citizen tracing service.
  contact:
    email: stuart.lynn@uk.ibm.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: pathto.findr.api/v1
security:
- apiKeyAuth: []
paths:
  /match:
    post:
      summary: Match a citizen
      description: |-
        Requests to this endpoint will initiate a trace based on the citizen attributes supplied in the _body_ parameter.
        - A response object generated by a successful trace may include one or more __Citizen Service Identifier__ results: a unique locator for the citizen's records within the service defined in the _service_ parameter.
        - __Citizen Service Identifiers__ will be returned with associated metadata about the quality of match that triggered inclusion in the results set.
        - If the matching service identifies more than one likely __Citizen Service Identifier__, suggestions for disambiguating attributes to request from the citizen may also be returned.
         - A _method_ parameter may be supplied to specify the algorithm used to perform matching.
      operationId: matchCitizen
      parameters:
      - name: service
        in: query
        description: Department Service for which __Citizen Service Identifier__ is required
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Benefit'
      - name: method
        in: query
        description: Method employed to identify potential matches
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: Simple
          enum:
          - Simple
          - IncludeIndirect
      requestBody:
        description: Parameters used for matching operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchParams'
            example:
              nationalInsuranceNumber: JJ602030D
              name:
                givenNames:
                - Edward
                - David
                lastName: Verdant
              dateOfBirth: 1974-04-23
              residence:
                addressLine1: 123 Acacia Drive
                postCode: AB1 9YZ
              lastPayment:
                paymentDate: 2018-11-23
                paymentValue: 123.45
                paymentValueFractionalPart: 45
              mustMatchExact:
              - nationalInsuranceNumber
              mustMatchCount: 2
        required: true
      responses:
        200:
          description: One or more Citizen Service Identifiers returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchResult'
              example:
                matchCandidateCount: 2
                matchCandidates:
                - citizenServiceIdentifier: 3fa85f64-5717-4562-b3fc-2c963f66afa3
                  matchCount: 3
                  exactMatchCount: 2
                  partialMatchCount: 1
                  matchDetails:
                  - attribute: nameLastName
                    matchType: exact
                  - attribute: dateOfBirth
                    matchType: exact
                  - attribute: nameGivenNames
                    matchType: partial
                  matchQuality: 85
                - citizenServiceIdentifier: 1a207d8d-5fb6-4275-9201-f9a8389b7cad
                  matchCount: 2
                  exactMatchCount: 2
                  partialMatchCount: 0
                  matchDetails:
                  - attribute: nameLastName
                    matchType: exact
                  - attribute: dateOfBirth
                    matchType: exact
                  matchQuality: 72
                disambiguators:
                - attribute: nationalInsuranceNumber
                  importance: 1
                - attribute: residencePostCode
                  importance: 2
        204:
          description: No __Citizen Service Identifier__ returned
        400:
          description: Invalid input, check request parameters
        401:
          description: Access token is missing or invalid
      x-swagger-router-controller: Default
components:
  schemas:
    CitizenAttribute:
      type: string
      enum:
      - nationalInsuranceNumber
      - nameGivenNames
      - nameLastName
      - dateOfBirth
      - residence
      - residenceAddressLine1
      - residencePostCode
      - lastPayment
      - lastPaymentDate
      - lastPaymentValue
      - lastPaymentValueFractionalPart
    Benefit:
      type: string
      enum:
      - JobSeekersAllowance
      - EmploymentSupportAllowance
      - UniversalCredit
      - PersonalIndependencePayment
    MatchParams:
      required:
      - dateOfBirth
      - name
      type: object
      properties:
        nationalInsuranceNumber:
          type: string
        name:
          $ref: '#/components/schemas/MatchParams_name'
        dateOfBirth:
          type: string
          format: date
        residence:
          $ref: '#/components/schemas/MatchParams_residence'
        lastPayment:
          $ref: '#/components/schemas/MatchParams_lastPayment'
        mustMatchExact:
          type: array
          items:
            $ref: '#/components/schemas/CitizenAttribute'
        mustMatchCount:
          minimum: 0
          type: integer
          format: int32
    Match:
      type: object
      properties:
        attribute:
          $ref: '#/components/schemas/CitizenAttribute'
        matchType:
          type: string
          enum:
          - partial
          - exact
    MatchCandidate:
      type: object
      properties:
        citizenServiceIdentifier:
          type: string
          format: uuid
        matchCount:
          type: integer
          format: int32
        exactMatchCount:
          type: integer
          format: int32
        partialMatchCount:
          type: integer
          format: int32
        matchDetails:
          type: array
          items:
            $ref: '#/components/schemas/Match'
        matchQuality:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
    Disambiguator:
      type: object
      properties:
        attribute:
          $ref: '#/components/schemas/CitizenAttribute'
        importance:
          type: integer
          format: int32
    MatchResult:
      type: object
      properties:
        matchCandidateCount:
          type: integer
          format: int32
        matchCandidates:
          type: array
          items:
            $ref: '#/components/schemas/MatchCandidate'
        disambiguators:
          type: array
          items:
            $ref: '#/components/schemas/Disambiguator'
    MatchParams_name:
      type: object
      properties:
        givenNames:
          type: array
          items:
            type: string
        lastName:
          type: string
    MatchParams_residence:
      type: object
      properties:
        addressLine1:
          type: string
        postCode:
          type: string
    MatchParams_lastPayment:
      type: object
      properties:
        paymentDate:
          type: string
          format: date
        paymentValue:
          type: number
          format: float
        paymentValueFractionalPart:
          type: integer
          format: int32
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
